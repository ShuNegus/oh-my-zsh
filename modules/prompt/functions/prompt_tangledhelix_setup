
# The guts of sorin married to the look of steeef, plus tweaks.
# Colors designed for Solarized Light profile in iTerm2.

__PROMPT_TANGLEDHELIX_COLORS=(
  "%F{cyan}"
  "%F{magenta}"
  "%F{yellow}"
  "%F{green}"
)

function prompt_tangledhelix_promptchar {
  [[ $UID -eq 0 || $EUID -eq 0 ]] && echo '#' || echo '%%'
}

function prompt_tangledhelix_vcsinfo {

  local __svn_info="$(svn info 2>/dev/null)"

  if [[ $? -eq 0 && -n "$__svn_info" ]]; then

    local __svn_rev="r$(echo $__svn_info | awk '/^Revision:/ {print $2}')"
    local __svn_url="$(echo $__svn_info | awk '/^URL:/ {print $2}')"
    local __svn_loc

    if [[ $__svn_url =~ '/trunk/' ]]; then
      __svn_loc=':%F{blue}trunk%f'
    elif [[ $__svn_url =~ '/branches/([^/]*)' ]]; then
      __svn_loc=":${__PROMPT_TANGLEDHELIX_COLORS[3]}${match[1]}%f"
    fi

    __PROMPT_TANGLEDHELIX_VCSINFO=" on %F{blue}svn%f:${__PROMPT_TANGLEDHELIX_COLORS[1]}$__svn_rev%f$__svn_loc"

    return
  fi

  local __hg_summary="$(hg summary 2>/dev/null)"

  if [[ $? -eq 0 && -n "$__hg_summary" ]]; then

    local __hg_branch="$(echo $__hg_summary | awk '/^branch:/ {print $2}')"
    local __hg_rev="$(echo $__hg_summary | awk '/^parent:/ {if (match($0,"[0-9]+")){printf("%s",substr($0,RSTART,RLENGTH));}}')"
    local __hg_loc

    if [[ $__hg_branch = 'default' ]]; then
      __hg_loc=':%F{blue}default%f'
    else
      __hg_loc=":${__PROMPT_TANGLEDHELIX_COLORS[3]}${__hg_branch}%f"
    fi

    __PROMPT_TANGLEDHELIX_VCSINFO=" on %F{blue}hg%f:${__PROMPT_TANGLEDHELIX_COLORS[1]}$__hg_rev%f$__hg_loc"

    return
  fi

  test -d CVS && __PROMPT_TANGLEDHELIX_VCSINFO=" in %F{blue}CVS%f" && return

  unset __PROMPT_TANGLEDHELIX_VCSINFO
}

function prompt_tangledhelix_virtualenv_auto_activate {
    if [ -e ".venv" ]; then
        # Check to see if already activated to avoid redundant activating
        if [ "$VIRTUAL_ENV" != "$(pwd -P)/.venv" ]; then
            _VENV_NAME=$(basename `pwd`)
            echo
            echo Activating virtualenv \"$_VENV_NAME\"...
            VIRTUAL_ENV_DISABLE_PROMPT=1
            source .venv/bin/activate
            __PROMPT_TANGLEDHELIX_VENV="[venv:$_VENV_NAME]"
        fi

    fi
    # If VIRTUAL_ENV isn't set anymore, make sure the prompt is cleaned up
    if [ -z "$VIRTUAL_ENV" ]; then
        unset __PROMPT_TANGLEDHELIX_VENV
        return
    fi
}

function prompt_tangledhelix_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  if (( $+functions[git-info] )); then
    git-info
  fi
  prompt_tangledhelix_vcsinfo
  prompt_tangledhelix_virtualenv_auto_activate
  #prompt_tangledhelix_custom_environment_per_cwd
}

function prompt_tangledhelix_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  autoload -Uz add-zsh-hook
  add-zsh-hook precmd prompt_tangledhelix_precmd

  zstyle ':omz:module:editor' completing '%B%F{red}...%f%b'
  zstyle ':omz:module:editor:keymap:primary' overwrite '%F{red}♺%f '
  zstyle ':omz:module:editor:keymap' alternate '%F{yellow}❯%f%B%F{red}❯%f%b%F{red}❯%f '
  zstyle ':omz:module:git' action ':%%B%F{yellow}%s%f%%b'
  zstyle ':omz:module:git' added '%%B%F{green}✚%f%%b '
  zstyle ':omz:module:git' ahead '%%B%F{yellow}⬆%f%%b '
  zstyle ':omz:module:git' behind '%%B%F{yellow}⬇%f%%b '
  zstyle ':omz:module:git' branch ':${__PROMPT_TANGLEDHELIX_COLORS[1]}%b%f'
  zstyle ':omz:module:git' commit ':%F{green}%.7c%f'
  zstyle ':omz:module:git' deleted '%%B%F{red}✖%f%%b '
  zstyle ':omz:module:git' modified '%%B%F{blue}✱%f%%b '
  zstyle ':omz:module:git' position ':%F{green}%p%f'
  zstyle ':omz:module:git' renamed '%%B%F{magenta}➜%f%%b '
  zstyle ':omz:module:git' stashed '%%B%F{cyan}✭%f%%b '
  zstyle ':omz:module:git' unmerged '%%B%F{yellow}═%f%%b '
  zstyle ':omz:module:git' untracked '%%B%F{blue}◼%f%%b '
  zstyle ':omz:module:git' info \
    'prompt'  ' on %F{blue}git%f$(coalesce "%b" "%p" "%c")%s' \
    'rprompt' '%A%B%S%a%d%m%r%U%u'

  if [[ -n "$(command -v ec2-metadata)" ]]; then
    __PROMPT_TANGLEDHELIX_HOST=${${=$(ec2-metadata -i)}[2]}
  elif [[ $(uname -n) =~ '^[^.]+\.[^.]+\.[^.]+\.[^.]' ]]; then
    __PROMPT_TANGLEDHELIX_HOST='%2m'
  else
    __PROMPT_TANGLEDHELIX_HOST='%m'
  fi

  PROMPT='
${__PROMPT_TANGLEDHELIX_COLORS[2]}%n%f at ${__PROMPT_TANGLEDHELIX_COLORS[3]}${__PROMPT_TANGLEDHELIX_HOST}%f in ${__PROMPT_TANGLEDHELIX_COLORS[4]}%~%f${git_info:+${(e)git_info[prompt]}}${__PROMPT_TANGLEDHELIX_VCSINFO}
${git_info[rprompt]}%(?::%F{red}!%f )${editor_info[keymap]}${editor_info[overwrite]}%B%(!.%F{red}.%F{green})${__PROMPT_TANGLEDHELIX_COLORS[3]}${__PROMPT_TANGLEDHELIX_VENV}%f$(prompt_tangledhelix_promptchar)%f%b '
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_tangledhelix_setup "$@"

